Approaac

class Solution
{
    public static void dfs(int start, ArrayList<ArrayList<Integer>> adj, int vis[],Stack<Integer> st) {
        vis[start] = 1;
        
        for(int it : adj.get(start)) {
            if(vis[it] == 0){
                dfs(it, adj, vis, st);
            }
        }
        st.push(start);
    }
    static int[] topoSort(int V, ArrayList<ArrayList<Integer>> adj) 
    {
        int[] vis = new int[V];
        
        Stack<Integer> st = new Stack<>();
        
        for(int i=0;i<V;i++) {
            if(vis[i] == 0){
                dfs(i,adj,vis,st);
            }
        }
        
        int[] res = new int[st.size()];
        int i= 0;
        while(!st.isEmpty()) {
            res[i++] = st.pop();
        }
        return res;
    }
}
